input ChangePasswordInput {
  oldPassword: String!
  newPassword: String!
}

type ChangePasswordPayload {
  success: Boolean!
}

input ForgotPasswordInput {
  email: String!
}

type ForgotPasswordPayload {
  success: Boolean!
}

type RefreshTokenPayload {
  accessToken: String!
}

input RefreshTokenInput {
  refreshToken: String!
}

input SignInInput {
  email: String!
  password: String! 
}

type SignInPayload {
  accessToken: String!
  refreshToken: String!
}

extend type Mutation {
  changePassword(input: ChangePasswordInput!): ChangePasswordPayload! @user
  forgotPassword(input: ForgotPasswordInput!): ForgotPasswordPayload! @guest
  refreshToken(input: RefreshTokenInput!): RefreshTokenPayload! @user
  signIn(input: SignInInput!): SignInPayload! @guest
}
